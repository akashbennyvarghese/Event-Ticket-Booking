version: "3.8"

services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: event_booking
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d event_booking"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5

  app:
    build: .
    restart: always
    ports:
      - "8005:8005"
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/event_booking
      REDIS_HOST: redis
      SECRET_KEY: "your-super-secret-key"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./app/frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - BROWSER=none
    depends_on:
      - app

volumes:
  postgres_data:
